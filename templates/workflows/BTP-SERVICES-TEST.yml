name: Entitlement tests {{ region }} - {{ category }}
# This file represents a complete version of the "BTP Setup Automator" integration tests
# All tests are executed in sequence on one BTP account to avoid entitlement limits
# This is why not matrix strategy is used
# The steps of a job must execute in any case, so we use always()

on:
  workflow_dispatch:

jobs:
  integration-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sap-samples/btp-setup-automator:main
      options: --user root
    env:{% raw %}
      BTPSA_PARAM_MYEMAIL: ${{ secrets.BTPSA_PARAM_MYEMAIL }}
      BTPSA_PARAM_GLOBALACCOUNT: ${{ secrets.BTPSA_PARAM_GLOBALACCOUNT }}
      BTPSA_PARAM_MYPASSWORD: ${{ secrets.BTPSA_PARAM_MYPASSWORD }}{% endraw %}
    steps: 
      - name: 'Preparing test environment for entitlement tests'
        if: {% raw %}${{ always() }}{% endraw %}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -metadatafile 'log/inttest.json' -parameterfile 'https://raw.githubusercontent.com/SAP-samples/btp-setup-automator/main/tests/integrationtests/parameterfiles/servicePlanIntegrationTest-prep-params.json'
{% for item in usecasetestlist %} 
      - name: 'Entitlement test in {{ region }} for {{ item.category }} {{ item.service }} (plan {{ item.plan }})'
        if: {% raw %}${{ always() }}{% endraw %}
        working-directory: /home/user
        shell: bash
        run: ./btpsa -parameterfile '{{ item.parameterfile }}' -pruneusecase true -prunesubaccount false -globalaccount $(jq -r ".globalaccount" log/inttest.json) -subdomain $(jq -r ".subdomain" log/inttest.json) -subaccountid $(jq -r ".subaccountid" log/inttest.json)  -org $(jq -r ".org" log/inttest.json) -orgid $(jq -r ".orgid" log/inttest.json) 
 {%- endfor %}